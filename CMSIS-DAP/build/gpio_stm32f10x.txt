; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\gpio_stm32f10x.o --asm_dir=.\build\ --list_dir=.\build\ --depend=.\gpio_stm32f10x.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\CMSIS-DAP -I.\USB -I.\User -I.\Driver\STM32F10x_ARM_Driver -I.\Driver\STM32F10x_StdPeriph_Driver\inc -IC:\Keil_v5\ARM\Pack\ARM\CMSIS\5.3.0\CMSIS\Include -IC:\Keil_v5\ARM\Pack\ARM\CMSIS\5.3.0\CMSIS\Driver\Include -ID:\Keil_v5\ARM\RV31\INC -ID:\Keil_v5\ARM\CMSIS\Include -ID:\Keil_v5\ARM\INC\ST\STM32F10x -D__MICROLIB -D__UVISION_VERSION=535 -DUSE_STDPERIPH_DRIVER -DSTM32F10X_MD -DBOARD_V1 -DSWO_PA10 -W --omf_browse=.\gpio_stm32f10x.crf Driver\STM32F10x_ARM_Driver\GPIO_STM32F10x.c]
                          THUMB

                          AREA ||i.GPIO_AFConfigure||, CODE, READONLY, ALIGN=2

                  GPIO_AFConfigure PROC
;;;134    */
;;;135    void GPIO_AFConfigure (AFIO_REMAP af_type) {
000000  b518              PUSH     {r3,r4,lr}
;;;136               uint32_t msk, val;
;;;137      volatile uint32_t mapr;
;;;138    
;;;139      if (af_type != AFIO_UNAVAILABLE_REMAP) {
000002  2800              CMP      r0,#0
000004  d044              BEQ      |L1.144|
;;;140        msk = (af_type >> 5) & 0x07;
000006  f3c01142          UBFX     r1,r0,#5,#3
;;;141        val = (af_type >> 8) & 0x0F;
00000a  f3c02203          UBFX     r2,r0,#8,#4
;;;142    
;;;143        if (!(RCC->APB2ENR & RCC_APB2ENR_AFIOEN)) {
00000e  4b21              LDR      r3,|L1.148|
000010  699b              LDR      r3,[r3,#0x18]
000012  f0030301          AND      r3,r3,#1
000016  b92b              CBNZ     r3,|L1.36|
;;;144          /* Enable AFIO peripheral clock */
;;;145          RCC->APB2ENR |= RCC_APB2ENR_AFIOEN;
000018  4b1e              LDR      r3,|L1.148|
00001a  699b              LDR      r3,[r3,#0x18]
00001c  f0430301          ORR      r3,r3,#1
000020  4c1c              LDR      r4,|L1.148|
000022  61a3              STR      r3,[r4,#0x18]
                  |L1.36|
;;;146        }
;;;147        if (af_type & (1 << 12)) {
000024  f4005380          AND      r3,r0,#0x1000
000028  b1a3              CBZ      r3,|L1.84|
;;;148          /* AF remap and debug I/O config register 2 */
;;;149          mapr  = AFIO->MAPR2;
00002a  4b1b              LDR      r3,|L1.152|
00002c  69db              LDR      r3,[r3,#0x1c]
00002e  9300              STR      r3,[sp,#0]
;;;150          mapr &= ~(msk << (af_type & 0x1F));
000030  f000031f          AND      r3,r0,#0x1f
000034  fa01f303          LSL      r3,r1,r3
000038  9c00              LDR      r4,[sp,#0]
00003a  439c              BICS     r4,r4,r3
00003c  9400              STR      r4,[sp,#0]
;;;151          mapr |=  (val << (af_type & 0x1F));
00003e  f000031f          AND      r3,r0,#0x1f
000042  fa02f303          LSL      r3,r2,r3
000046  9c00              LDR      r4,[sp,#0]
000048  4323              ORRS     r3,r3,r4
00004a  9300              STR      r3,[sp,#0]
;;;152          AFIO->MAPR2 = mapr;
00004c  4c12              LDR      r4,|L1.152|
00004e  9b00              LDR      r3,[sp,#0]
000050  61e3              STR      r3,[r4,#0x1c]
000052  e01d              B        |L1.144|
                  |L1.84|
;;;153        }
;;;154        else {
;;;155          /* AF remap and debug I/O config register */
;;;156          mapr  = AFIO->MAPR;
000054  4b10              LDR      r3,|L1.152|
000056  685b              LDR      r3,[r3,#4]
000058  9300              STR      r3,[sp,#0]
;;;157          mapr &= ~(msk << (af_type & 0x1F));
00005a  f000031f          AND      r3,r0,#0x1f
00005e  fa01f303          LSL      r3,r1,r3
000062  9c00              LDR      r4,[sp,#0]
000064  439c              BICS     r4,r4,r3
000066  9400              STR      r4,[sp,#0]
;;;158          mapr |=  (val << (af_type & 0x1F));
000068  f000031f          AND      r3,r0,#0x1f
00006c  fa02f303          LSL      r3,r2,r3
000070  9c00              LDR      r4,[sp,#0]
000072  4323              ORRS     r3,r3,r4
000074  9300              STR      r3,[sp,#0]
;;;159    
;;;160          /* Serial wire JTAG configuration */
;;;161          msk  =   (AFIO_MAPR_SWJ_CFG_VAL >> 5) & 0x07;
000076  2107              MOVS     r1,#7
;;;162          val  =   (AFIO_MAPR_SWJ_CFG_VAL >> 8) & 0x0F;
000078  2200              MOVS     r2,#0
;;;163          mapr &= ~(msk << (AFIO_MAPR_SWJ_CFG_VAL & 0x1F));
00007a  9b00              LDR      r3,[sp,#0]
00007c  ea236301          BIC      r3,r3,r1,LSL #24
000080  9300              STR      r3,[sp,#0]
;;;164          mapr |=  (val << (AFIO_MAPR_SWJ_CFG_VAL & 0x1F));
000082  9b00              LDR      r3,[sp,#0]
000084  ea436302          ORR      r3,r3,r2,LSL #24
000088  9300              STR      r3,[sp,#0]
;;;165    
;;;166          AFIO->MAPR = mapr;
00008a  4c03              LDR      r4,|L1.152|
00008c  9b00              LDR      r3,[sp,#0]
00008e  6063              STR      r3,[r4,#4]
                  |L1.144|
;;;167        }
;;;168      }
;;;169    }
000090  bd18              POP      {r3,r4,pc}
                          ENDP

000092  0000              DCW      0x0000
                  |L1.148|
                          DCD      0x40021000
                  |L1.152|
                          DCD      0x40010000

                          AREA ||i.GPIO_GetPortClockState||, CODE, READONLY, ALIGN=2

                  GPIO_GetPortClockState PROC
;;;67     */
;;;68     bool GPIO_GetPortClockState (GPIO_TypeDef *GPIOx) {
000000  4601              MOV      r1,r0
;;;69     
;;;70       if      (GPIOx == GPIOA) { return ((RCC->APB2ENR &  (1U << 2)) != 0U); }
000002  481d              LDR      r0,|L2.120|
000004  4281              CMP      r1,r0
000006  d104              BNE      |L2.18|
000008  481c              LDR      r0,|L2.124|
00000a  6980              LDR      r0,[r0,#0x18]
00000c  f3c00080          UBFX     r0,r0,#2,#1
                  |L2.16|
;;;71       else if (GPIOx == GPIOB) { return ((RCC->APB2ENR &  (1U << 3)) != 0U); }
;;;72       else if (GPIOx == GPIOC) { return ((RCC->APB2ENR &  (1U << 4)) != 0U); }
;;;73       else if (GPIOx == GPIOD) { return ((RCC->APB2ENR &  (1U << 5)) != 0U); }
;;;74       else if (GPIOx == GPIOE) { return ((RCC->APB2ENR &  (1U << 6)) != 0U); }
;;;75       else if (GPIOx == GPIOF) { return ((RCC->APB2ENR &  (1U << 7)) != 0U); }
;;;76       else if (GPIOx == GPIOG) { return ((RCC->APB2ENR &  (1U << 8)) != 0U); }
;;;77     
;;;78       return false; 
;;;79     }
000010  4770              BX       lr
                  |L2.18|
000012  481b              LDR      r0,|L2.128|
000014  4281              CMP      r1,r0                 ;71
000016  d104              BNE      |L2.34|
000018  4818              LDR      r0,|L2.124|
00001a  6980              LDR      r0,[r0,#0x18]         ;71
00001c  f3c000c0          UBFX     r0,r0,#3,#1           ;71
000020  e7f6              B        |L2.16|
                  |L2.34|
000022  4818              LDR      r0,|L2.132|
000024  4281              CMP      r1,r0                 ;72
000026  d104              BNE      |L2.50|
000028  4814              LDR      r0,|L2.124|
00002a  6980              LDR      r0,[r0,#0x18]         ;72
00002c  f3c01000          UBFX     r0,r0,#4,#1           ;72
000030  e7ee              B        |L2.16|
                  |L2.50|
000032  4815              LDR      r0,|L2.136|
000034  4281              CMP      r1,r0                 ;73
000036  d104              BNE      |L2.66|
000038  4810              LDR      r0,|L2.124|
00003a  6980              LDR      r0,[r0,#0x18]         ;73
00003c  f3c01040          UBFX     r0,r0,#5,#1           ;73
000040  e7e6              B        |L2.16|
                  |L2.66|
000042  4812              LDR      r0,|L2.140|
000044  4281              CMP      r1,r0                 ;74
000046  d104              BNE      |L2.82|
000048  480c              LDR      r0,|L2.124|
00004a  6980              LDR      r0,[r0,#0x18]         ;74
00004c  f3c01080          UBFX     r0,r0,#6,#1           ;74
000050  e7de              B        |L2.16|
                  |L2.82|
000052  480f              LDR      r0,|L2.144|
000054  4281              CMP      r1,r0                 ;75
000056  d104              BNE      |L2.98|
000058  4808              LDR      r0,|L2.124|
00005a  6980              LDR      r0,[r0,#0x18]         ;75
00005c  f3c010c0          UBFX     r0,r0,#7,#1           ;75
000060  e7d6              B        |L2.16|
                  |L2.98|
000062  480c              LDR      r0,|L2.148|
000064  4281              CMP      r1,r0                 ;76
000066  d104              BNE      |L2.114|
000068  4804              LDR      r0,|L2.124|
00006a  6980              LDR      r0,[r0,#0x18]         ;76
00006c  f3c02000          UBFX     r0,r0,#8,#1           ;76
000070  e7ce              B        |L2.16|
                  |L2.114|
000072  2000              MOVS     r0,#0                 ;78
000074  e7cc              B        |L2.16|
;;;80     
                          ENDP

000076  0000              DCW      0x0000
                  |L2.120|
                          DCD      0x40010800
                  |L2.124|
                          DCD      0x40021000
                  |L2.128|
                          DCD      0x40010c00
                  |L2.132|
                          DCD      0x40011000
                  |L2.136|
                          DCD      0x40011400
                  |L2.140|
                          DCD      0x40011800
                  |L2.144|
                          DCD      0x40011c00
                  |L2.148|
                          DCD      0x40012000

                          AREA ||i.GPIO_PinConfigure||, CODE, READONLY, ALIGN=1

                  GPIO_PinConfigure PROC
;;;94     */
;;;95     bool GPIO_PinConfigure(GPIO_TypeDef *GPIOx, uint32_t num, GPIO_CONF conf,
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;96                                                               GPIO_MODE mode) {
000004  4605              MOV      r5,r0
000006  460c              MOV      r4,r1
000008  4617              MOV      r7,r2
00000a  4698              MOV      r8,r3
;;;97       __IO uint32_t *reg;
;;;98       if (num > 15) return false;
00000c  2c0f              CMP      r4,#0xf
00000e  d902              BLS      |L3.22|
000010  2000              MOVS     r0,#0
                  |L3.18|
;;;99     
;;;100      if (GPIO_GetPortClockState(GPIOx) == false) {
;;;101        /* Enable GPIOx peripheral clock */
;;;102        GPIO_PortClock (GPIOx, true);
;;;103      } 
;;;104    
;;;105      if (mode == GPIO_MODE_INPUT) {
;;;106        if      (conf == GPIO_IN_PULL_DOWN) {
;;;107          /* Enable pull down on selected input */
;;;108          GPIOx->ODR &= ~(1 << num);
;;;109        }
;;;110        else if (conf == GPIO_IN_PULL_UP) {
;;;111          /* Enable pull up on selected input */
;;;112          conf &= ~1;
;;;113          GPIOx->ODR |=  (1 << num);
;;;114        }
;;;115      }
;;;116    
;;;117      if (num < 8) {
;;;118        reg = &GPIOx->CRL;
;;;119      }
;;;120      else {
;;;121        num -= 8;
;;;122        reg = &GPIOx->CRH;
;;;123      }
;;;124      *reg &= ~(0xF << (num << 2));
;;;125      *reg |= ((conf << 2) | mode) << (num << 2);
;;;126      return true;
;;;127    }
000012  e8bd81f0          POP      {r4-r8,pc}
                  |L3.22|
000016  4628              MOV      r0,r5                 ;100
000018  f7fffffe          BL       GPIO_GetPortClockState
00001c  b918              CBNZ     r0,|L3.38|
00001e  2101              MOVS     r1,#1                 ;102
000020  4628              MOV      r0,r5                 ;102
000022  f7fffffe          BL       GPIO_PortClock
                  |L3.38|
000026  f1b80f00          CMP      r8,#0                 ;105
00002a  d110              BNE      |L3.78|
00002c  2f02              CMP      r7,#2                 ;106
00002e  d105              BNE      |L3.60|
000030  68e8              LDR      r0,[r5,#0xc]          ;108
000032  2101              MOVS     r1,#1                 ;108
000034  40a1              LSLS     r1,r1,r4              ;108
000036  4388              BICS     r0,r0,r1              ;108
000038  60e8              STR      r0,[r5,#0xc]          ;108
00003a  e008              B        |L3.78|
                  |L3.60|
00003c  2f03              CMP      r7,#3                 ;110
00003e  d106              BNE      |L3.78|
000040  f0270701          BIC      r7,r7,#1              ;112
000044  68e8              LDR      r0,[r5,#0xc]          ;113
000046  2101              MOVS     r1,#1                 ;113
000048  40a1              LSLS     r1,r1,r4              ;113
00004a  4308              ORRS     r0,r0,r1              ;113
00004c  60e8              STR      r0,[r5,#0xc]          ;113
                  |L3.78|
00004e  2c08              CMP      r4,#8                 ;117
000050  d201              BCS      |L3.86|
000052  462e              MOV      r6,r5                 ;118
000054  e001              B        |L3.90|
                  |L3.86|
000056  3c08              SUBS     r4,r4,#8              ;121
000058  1d2e              ADDS     r6,r5,#4              ;122
                  |L3.90|
00005a  6830              LDR      r0,[r6,#0]            ;124
00005c  00a2              LSLS     r2,r4,#2              ;124
00005e  210f              MOVS     r1,#0xf               ;124
000060  4091              LSLS     r1,r1,r2              ;124
000062  4388              BICS     r0,r0,r1              ;124
000064  6030              STR      r0,[r6,#0]            ;124
000066  ea480087          ORR      r0,r8,r7,LSL #2       ;125
00006a  00a1              LSLS     r1,r4,#2              ;125
00006c  4088              LSLS     r0,r0,r1              ;125
00006e  6831              LDR      r1,[r6,#0]            ;125
000070  4308              ORRS     r0,r0,r1              ;125
000072  6030              STR      r0,[r6,#0]            ;125
000074  2001              MOVS     r0,#1                 ;126
000076  e7cc              B        |L3.18|
;;;128    
                          ENDP


                          AREA ||i.GPIO_PortClock||, CODE, READONLY, ALIGN=2

                  GPIO_PortClock PROC
;;;39     */
;;;40     void GPIO_PortClock (GPIO_TypeDef *GPIOx, bool enable) {
000000  2900              CMP      r1,#0
;;;41     
;;;42       if (enable) {
000002  d045              BEQ      |L4.144|
;;;43         if      (GPIOx == GPIOA) RCC->APB2ENR |=  (1U << 2);
000004  4a45              LDR      r2,|L4.284|
000006  4290              CMP      r0,r2
000008  d106              BNE      |L4.24|
00000a  4a45              LDR      r2,|L4.288|
00000c  6992              LDR      r2,[r2,#0x18]
00000e  f0420204          ORR      r2,r2,#4
000012  4b43              LDR      r3,|L4.288|
000014  619a              STR      r2,[r3,#0x18]
000016  e080              B        |L4.282|
                  |L4.24|
;;;44         else if (GPIOx == GPIOB) RCC->APB2ENR |=  (1U << 3);
000018  4a42              LDR      r2,|L4.292|
00001a  4290              CMP      r0,r2
00001c  d106              BNE      |L4.44|
00001e  4a40              LDR      r2,|L4.288|
000020  6992              LDR      r2,[r2,#0x18]
000022  f0420208          ORR      r2,r2,#8
000026  4b3e              LDR      r3,|L4.288|
000028  619a              STR      r2,[r3,#0x18]
00002a  e076              B        |L4.282|
                  |L4.44|
;;;45         else if (GPIOx == GPIOC) RCC->APB2ENR |=  (1U << 4);
00002c  4a3e              LDR      r2,|L4.296|
00002e  4290              CMP      r0,r2
000030  d106              BNE      |L4.64|
000032  4a3b              LDR      r2,|L4.288|
000034  6992              LDR      r2,[r2,#0x18]
000036  f0420210          ORR      r2,r2,#0x10
00003a  4b39              LDR      r3,|L4.288|
00003c  619a              STR      r2,[r3,#0x18]
00003e  e06c              B        |L4.282|
                  |L4.64|
;;;46         else if (GPIOx == GPIOD) RCC->APB2ENR |=  (1U << 5);
000040  4a3a              LDR      r2,|L4.300|
000042  4290              CMP      r0,r2
000044  d106              BNE      |L4.84|
000046  4a36              LDR      r2,|L4.288|
000048  6992              LDR      r2,[r2,#0x18]
00004a  f0420220          ORR      r2,r2,#0x20
00004e  4b34              LDR      r3,|L4.288|
000050  619a              STR      r2,[r3,#0x18]
000052  e062              B        |L4.282|
                  |L4.84|
;;;47         else if (GPIOx == GPIOE) RCC->APB2ENR |=  (1U << 6);
000054  4a36              LDR      r2,|L4.304|
000056  4290              CMP      r0,r2
000058  d106              BNE      |L4.104|
00005a  4a31              LDR      r2,|L4.288|
00005c  6992              LDR      r2,[r2,#0x18]
00005e  f0420240          ORR      r2,r2,#0x40
000062  4b2f              LDR      r3,|L4.288|
000064  619a              STR      r2,[r3,#0x18]
000066  e058              B        |L4.282|
                  |L4.104|
;;;48         else if (GPIOx == GPIOF) RCC->APB2ENR |=  (1U << 7);
000068  4a32              LDR      r2,|L4.308|
00006a  4290              CMP      r0,r2
00006c  d106              BNE      |L4.124|
00006e  4a2c              LDR      r2,|L4.288|
000070  6992              LDR      r2,[r2,#0x18]
000072  f0420280          ORR      r2,r2,#0x80
000076  4b2a              LDR      r3,|L4.288|
000078  619a              STR      r2,[r3,#0x18]
00007a  e04e              B        |L4.282|
                  |L4.124|
;;;49         else if (GPIOx == GPIOG) RCC->APB2ENR |=  (1U << 8);
00007c  4a2e              LDR      r2,|L4.312|
00007e  4290              CMP      r0,r2
000080  d14b              BNE      |L4.282|
000082  4a27              LDR      r2,|L4.288|
000084  6992              LDR      r2,[r2,#0x18]
000086  f4427280          ORR      r2,r2,#0x100
00008a  4b25              LDR      r3,|L4.288|
00008c  619a              STR      r2,[r3,#0x18]
00008e  e044              B        |L4.282|
                  |L4.144|
;;;50       } else {
;;;51         if      (GPIOx == GPIOA) RCC->APB2ENR &= ~(1U << 2);
000090  4a22              LDR      r2,|L4.284|
000092  4290              CMP      r0,r2
000094  d106              BNE      |L4.164|
000096  4a22              LDR      r2,|L4.288|
000098  6992              LDR      r2,[r2,#0x18]
00009a  f0220204          BIC      r2,r2,#4
00009e  4b20              LDR      r3,|L4.288|
0000a0  619a              STR      r2,[r3,#0x18]
0000a2  e03a              B        |L4.282|
                  |L4.164|
;;;52         else if (GPIOx == GPIOB) RCC->APB2ENR &= ~(1U << 3);
0000a4  4a1f              LDR      r2,|L4.292|
0000a6  4290              CMP      r0,r2
0000a8  d106              BNE      |L4.184|
0000aa  4a1d              LDR      r2,|L4.288|
0000ac  6992              LDR      r2,[r2,#0x18]
0000ae  f0220208          BIC      r2,r2,#8
0000b2  4b1b              LDR      r3,|L4.288|
0000b4  619a              STR      r2,[r3,#0x18]
0000b6  e030              B        |L4.282|
                  |L4.184|
;;;53         else if (GPIOx == GPIOC) RCC->APB2ENR &= ~(1U << 4);
0000b8  4a1b              LDR      r2,|L4.296|
0000ba  4290              CMP      r0,r2
0000bc  d106              BNE      |L4.204|
0000be  4a18              LDR      r2,|L4.288|
0000c0  6992              LDR      r2,[r2,#0x18]
0000c2  f0220210          BIC      r2,r2,#0x10
0000c6  4b16              LDR      r3,|L4.288|
0000c8  619a              STR      r2,[r3,#0x18]
0000ca  e026              B        |L4.282|
                  |L4.204|
;;;54         else if (GPIOx == GPIOD) RCC->APB2ENR &= ~(1U << 5);
0000cc  4a17              LDR      r2,|L4.300|
0000ce  4290              CMP      r0,r2
0000d0  d106              BNE      |L4.224|
0000d2  4a13              LDR      r2,|L4.288|
0000d4  6992              LDR      r2,[r2,#0x18]
0000d6  f0220220          BIC      r2,r2,#0x20
0000da  4b11              LDR      r3,|L4.288|
0000dc  619a              STR      r2,[r3,#0x18]
0000de  e01c              B        |L4.282|
                  |L4.224|
;;;55         else if (GPIOx == GPIOE) RCC->APB2ENR &= ~(1U << 6);
0000e0  4a13              LDR      r2,|L4.304|
0000e2  4290              CMP      r0,r2
0000e4  d106              BNE      |L4.244|
0000e6  4a0e              LDR      r2,|L4.288|
0000e8  6992              LDR      r2,[r2,#0x18]
0000ea  f0220240          BIC      r2,r2,#0x40
0000ee  4b0c              LDR      r3,|L4.288|
0000f0  619a              STR      r2,[r3,#0x18]
0000f2  e012              B        |L4.282|
                  |L4.244|
;;;56         else if (GPIOx == GPIOF) RCC->APB2ENR &= ~(1U << 7);
0000f4  4a0f              LDR      r2,|L4.308|
0000f6  4290              CMP      r0,r2
0000f8  d106              BNE      |L4.264|
0000fa  4a09              LDR      r2,|L4.288|
0000fc  6992              LDR      r2,[r2,#0x18]
0000fe  f0220280          BIC      r2,r2,#0x80
000102  4b07              LDR      r3,|L4.288|
000104  619a              STR      r2,[r3,#0x18]
000106  e008              B        |L4.282|
                  |L4.264|
;;;57         else if (GPIOx == GPIOG) RCC->APB2ENR &= ~(1U << 8);
000108  4a0b              LDR      r2,|L4.312|
00010a  4290              CMP      r0,r2
00010c  d105              BNE      |L4.282|
00010e  4a04              LDR      r2,|L4.288|
000110  6992              LDR      r2,[r2,#0x18]
000112  f4227280          BIC      r2,r2,#0x100
000116  4b02              LDR      r3,|L4.288|
000118  619a              STR      r2,[r3,#0x18]
                  |L4.282|
;;;58       }
;;;59     }
00011a  4770              BX       lr
;;;60     
                          ENDP

                  |L4.284|
                          DCD      0x40010800
                  |L4.288|
                          DCD      0x40021000
                  |L4.292|
                          DCD      0x40010c00
                  |L4.296|
                          DCD      0x40011000
                  |L4.300|
                          DCD      0x40011400
                  |L4.304|
                          DCD      0x40011800
                  |L4.308|
                          DCD      0x40011c00
                  |L4.312|
                          DCD      0x40012000

;*** Start embedded assembler ***

#line 1 "Driver\\STM32F10x_ARM_Driver\\GPIO_STM32F10x.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___16_GPIO_STM32F10x_c_7565b535____REV16|
#line 492 ".\\User\\cmsis_armcc.h"
|__asm___16_GPIO_STM32F10x_c_7565b535____REV16| PROC
#line 493

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___16_GPIO_STM32F10x_c_7565b535____REVSH|
#line 507
|__asm___16_GPIO_STM32F10x_c_7565b535____REVSH| PROC
#line 508

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___16_GPIO_STM32F10x_c_7565b535____RRX|
#line 694
|__asm___16_GPIO_STM32F10x_c_7565b535____RRX| PROC
#line 695

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
